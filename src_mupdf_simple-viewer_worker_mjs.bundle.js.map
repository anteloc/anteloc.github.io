{"version":3,"file":"src_mupdf_simple-viewer_worker_mjs.bundle.js","mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ;AACA;;AAEA;AACA;;AAEsC;;AAEtC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,+BAA+B,+DAA+D;AAC9F;AACA;;AAEA;AACA;AACA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB,0BAA0B;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;UCpOA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WClCA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;WACD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA,sGAAsG;WACtG;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA,EAAE;WACF;WACA;;;;;WChEA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WClBA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://fusion-reader/./src/mupdf/simple-viewer/worker.mjs","webpack://fusion-reader/webpack/bootstrap","webpack://fusion-reader/webpack/runtime/async module","webpack://fusion-reader/webpack/runtime/chunk loaded","webpack://fusion-reader/webpack/runtime/ensure chunk","webpack://fusion-reader/webpack/runtime/get javascript chunk filename","webpack://fusion-reader/webpack/runtime/global","webpack://fusion-reader/webpack/runtime/hasOwnProperty shorthand","webpack://fusion-reader/webpack/runtime/make namespace object","webpack://fusion-reader/webpack/runtime/publicPath","webpack://fusion-reader/webpack/runtime/importScripts chunk loading","webpack://fusion-reader/webpack/runtime/startup chunk dependencies","webpack://fusion-reader/webpack/before-startup","webpack://fusion-reader/webpack/startup","webpack://fusion-reader/webpack/after-startup"],"sourcesContent":["// Copyright (C) 2022, 2024 Artifex Software, Inc.\n//\n// This file is part of MuPDF.\n//\n// MuPDF is free software: you can redistribute it and/or modify it under the\n// terms of the GNU Affero General Public License as published by the Free\n// Software Foundation, either version 3 of the License, or (at your option)\n// any later version.\n//\n// MuPDF is distributed in the hope that it will be useful, but WITHOUT ANY\n// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n// FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n// details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with MuPDF. If not, see <https://www.gnu.org/licenses/agpl-3.0.en.html>\n//\n// Alternative licensing terms are available from the licensor.\n// For commercial licensing, see <https://www.artifex.com/> or contact\n// Artifex Software, Inc., 39 Mesa Street, Suite 108A, San Francisco,\n// CA 94129, USA, for further information.\n\n\"use strict\"\n\n// import * as mupdf from \"../../dist/mupdf.js\"\n// import * as mupdf from \"lib/mupdf/mupdf.js\"\n\n// import * as mupdf from \"mupdf\"\nconst mupdf = await import(/* webpackIgnore: true */\"/lib/mupdf/mupdf.js\");\n\nimport localforage from \"localforage\";\n\nconst methods = {}\n\nonmessage = async function (event) {\n\tlet [ func, id, args ] = event.data\n\ttry {\n\t\tlet result = methods[func](...args)\n\t\tpostMessage([ \"RESULT\", id, result ])\n\t} catch (error) {\n\t\tpostMessage([ \"ERROR\", id, { name: error.name, message: error.message, stack: error.stack } ])\n\t}\n}\n\nvar document_next_id = 1\n// TODO review if this is needed, given that we will have only a single document open at a time\nvar document_map = {} // open mupdf.Document handles\n\nclass WorkerBlobStream {\n\tconstructor(blob) {\n\t\tthis.reader = new FileReaderSync()\n\t\tthis.blob = blob\n\t}\n\tfileSize() {\n\t\treturn this.blob.size\n\t}\n\tread(memory, offset, size, position) {\n\t\tlet data = this.reader.readAsArrayBuffer(this.blob.slice(position, position + size))\n\t\tmemory.set(new Uint8Array(data), offset)\n\t\treturn data.byteLength\n\t}\n\tclose() {\n\t\tthis.reader = null\n\t\tthis.blob = null\n\t}\n}\n\nmethods.openDocumentFromBlob = function (blob, magic) {\n\tconsole.log(\"openDocumentFromBlob: stream START\", new Date())\n\tlet stm = new mupdf.Stream(new WorkerBlobStream(blob))\n\tconsole.log(\"openDocumentFromBlob: stream END\", new Date())\n\tlet doc_id = document_next_id++\n\tconsole.log(\"openDocumentFromBlob: openDocument START\", new Date())\n\tdocument_map[doc_id] = mupdf.Document.openDocument(stm, magic)\n\tconsole.log(\"openDocumentFromBlob: openDocument END\", new Date())\n\treturn doc_id\n}\n\nmethods.openDocumentFromBuffer = function (buffer, magic) {\n\tlet doc_id = document_next_id++\n\tconsole.log(\"openDocumentFromBuffer: START\", new Date())\n\tdocument_map[doc_id] = mupdf.Document.openDocument(buffer, magic)\n\tconsole.log(\"openDocumentFromBuffer: END\", new Date())\n\treturn doc_id\n}\n\nmethods.closeDocument = function (doc_id) {\n\tlet doc = document_map[doc_id]\n\tdoc.destroy()\n\tdelete document_map[doc_id]\n}\n\nmethods.documentTitle = function (doc_id) {\n\tlet doc = document_map[doc_id]\n\treturn doc.getMetaData(mupdf.Document.META_INFO_TITLE)\n}\n\nmethods.documentMetadata = function (doc_id) {\n\tlet doc = document_map[doc_id]\n\n\treturn {\n\t\ttitle: doc.getMetaData(mupdf.Document.META_INFO_TITLE),\n\t\tauthor: doc.getMetaData(mupdf.Document.META_INFO_AUTHOR),\n\t\tsubject: doc.getMetaData(mupdf.Document.META_INFO_SUBJECT),\n\t\tkeywords: doc.getMetaData(mupdf.Document.META_INFO_KEYWORDS),\n\t\tcreator: doc.getMetaData(mupdf.Document.META_INFO_CREATOR),\n\t\tproducer: doc.getMetaData(mupdf.Document.META_INFO_PRODUCER),\n\t\tcreationDate: doc.getMetaData(mupdf.Document.META_INFO_CREATIONDATE),\n\t\tmodDate: doc.getMetaData(mupdf.Document.META_INFO_MODIFICATIONDATE),\n\t\tformat: doc.getMetaData(mupdf.Document.META_FORMAT),\n\t}\n}\n\nmethods.documentOutline = function (doc_id) {\n\tlet doc = document_map[doc_id]\n\treturn doc.loadOutline()\n}\n\nmethods.countPages = function (doc_id) {\n\tlet doc = document_map[doc_id]\n\treturn doc.countPages()\n}\n\nmethods.getPageSize = function (doc_id, page_number) {\n\tlet doc = document_map[doc_id]\n\tlet page = doc.loadPage(page_number)\n\tlet bounds = page.getBounds()\n\treturn { width: bounds[2] - bounds[0], height: bounds[3] - bounds[1] }\n}\n\nmethods.getPageLinks = function (doc_id, page_number) {\n\tlet doc = document_map[doc_id]\n\tlet page = doc.loadPage(page_number)\n\tlet links = page.getLinks()\n\n\treturn links.map((link) => {\n\t\tconst [ x0, y0, x1, y1 ] = link.getBounds()\n\n\t\tlet href\n\t\tif (link.isExternal())\n\t\t\thref = link.getURI()\n\t\telse\n\t\t\thref = `#page${doc.resolveLink(link) + 1}`\n\n\t\treturn {\n\t\t\tx: x0,\n\t\t\ty: y0,\n\t\t\tw: x1 - x0,\n\t\t\th: y1 - y0,\n\t\t\thref,\n\t\t}\n\t})\n}\n\nmethods.getPageText = function (doc_id, page_number) {\n\tlet doc = document_map[doc_id]\n\tlet page = doc.loadPage(page_number)\n\tlet text = page.toStructuredText().asJSON()\n\treturn JSON.parse(text)\n}\n\nmethods.search = function (doc_id, page_number, needle) {\n\tlet doc = document_map[doc_id]\n\tlet page = doc.loadPage(page_number)\n\tconst hits = page.search(needle)\n\tlet result = []\n\tfor (let hit of hits) {\n\t\tfor (let quad of hit) {\n\t\t\tconst [ ulx, uly, urx, ury, llx, lly, lrx, lry ] = quad\n\t\t\tresult.push({\n\t\t\t\tx: ulx,\n\t\t\t\ty: uly,\n\t\t\t\tw: urx - ulx,\n\t\t\t\th: lly - uly,\n\t\t\t})\n\t\t}\n\t}\n\treturn result\n}\n\nmethods.getPageAnnotations = function (doc_id, page_number, dpi) {\n\tlet doc = document_map[doc_id]\n\tlet page = doc.loadPage(page_number)\n\n\tif (page == null) {\n\t\treturn []\n\t}\n\n\tconst annotations = page.getAnnotations()\n\tconst doc_to_screen = [ dpi = 72, 0, 0, dpi / 72, 0, 0 ]\n\n\treturn annotations.map((annotation) => {\n\t\tconst [ x0, y0, x1, y1 ] = mupdf.Matrix.transformRect(annotation.getBounds())\n\t\treturn {\n\t\t\tx: x0,\n\t\t\ty: y0,\n\t\t\tw: x1 - x0,\n\t\t\th: y1 - y0,\n\t\t\ttype: annotation.getType(),\n\t\t\tref: annotation.pointer,\n\t\t}\n\t})\n}\n\nmethods.drawPageAsPixmap = function (doc_id, page_number, dpi) {\n\tconst doc_to_screen = mupdf.Matrix.scale(dpi / 72, dpi / 72)\n\n\tlet doc = document_map[doc_id]\n\t// TODO should we destroy the page after use?\n\tlet page = doc.loadPage(page_number)\n\tlet bbox = mupdf.Rect.transform(page.getBounds(), doc_to_screen)\n\n\tlet pixmap = new mupdf.Pixmap(mupdf.ColorSpace.DeviceRGB, bbox, true)\n\tpixmap.clear(255)\n\n\tlet device = new mupdf.DrawDevice(doc_to_screen, pixmap)\n\tpage.run(device, mupdf.Matrix.identity)\n\tdevice.close()\n\n\t// TODO: do we need to make a copy with slice() ?\n\tlet imageData = new ImageData(pixmap.getPixels().slice(), pixmap.getWidth(), pixmap.getHeight())\n\n\tpixmap.destroy()\n\n\t// TODO: do we need to pass image data as transferable to avoid copying?\n\treturn imageData\n}\n\npostMessage([ \"INIT\", 0, Object.keys(methods) ])\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_localforage_dist_localforage_js\"], () => (__webpack_require__(\"./src/mupdf/simple-viewer/worker.mjs\")))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var webpackQueues = typeof Symbol === \"function\" ? Symbol(\"webpack queues\") : \"__webpack_queues__\";\nvar webpackExports = typeof Symbol === \"function\" ? Symbol(\"webpack exports\") : \"__webpack_exports__\";\nvar webpackError = typeof Symbol === \"function\" ? Symbol(\"webpack error\") : \"__webpack_error__\";\nvar resolveQueue = (queue) => {\n\tif(queue && queue.d < 1) {\n\t\tqueue.d = 1;\n\t\tqueue.forEach((fn) => (fn.r--));\n\t\tqueue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));\n\t}\n}\nvar wrapDeps = (deps) => (deps.map((dep) => {\n\tif(dep !== null && typeof dep === \"object\") {\n\t\tif(dep[webpackQueues]) return dep;\n\t\tif(dep.then) {\n\t\t\tvar queue = [];\n\t\t\tqueue.d = 0;\n\t\t\tdep.then((r) => {\n\t\t\t\tobj[webpackExports] = r;\n\t\t\t\tresolveQueue(queue);\n\t\t\t}, (e) => {\n\t\t\t\tobj[webpackError] = e;\n\t\t\t\tresolveQueue(queue);\n\t\t\t});\n\t\t\tvar obj = {};\n\t\t\tobj[webpackQueues] = (fn) => (fn(queue));\n\t\t\treturn obj;\n\t\t}\n\t}\n\tvar ret = {};\n\tret[webpackQueues] = x => {};\n\tret[webpackExports] = dep;\n\treturn ret;\n}));\n__webpack_require__.a = (module, body, hasAwait) => {\n\tvar queue;\n\thasAwait && ((queue = []).d = -1);\n\tvar depQueues = new Set();\n\tvar exports = module.exports;\n\tvar currentDeps;\n\tvar outerResolve;\n\tvar reject;\n\tvar promise = new Promise((resolve, rej) => {\n\t\treject = rej;\n\t\touterResolve = resolve;\n\t});\n\tpromise[webpackExports] = exports;\n\tpromise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise[\"catch\"](x => {}));\n\tmodule.exports = promise;\n\tbody((deps) => {\n\t\tcurrentDeps = wrapDeps(deps);\n\t\tvar fn;\n\t\tvar getResult = () => (currentDeps.map((d) => {\n\t\t\tif(d[webpackError]) throw d[webpackError];\n\t\t\treturn d[webpackExports];\n\t\t}))\n\t\tvar promise = new Promise((resolve) => {\n\t\t\tfn = () => (resolve(getResult));\n\t\t\tfn.r = 0;\n\t\t\tvar fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));\n\t\t\tcurrentDeps.map((dep) => (dep[webpackQueues](fnQueue)));\n\t\t});\n\t\treturn fn.r ? promise : getResult();\n\t}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));\n\tqueue && queue.d < 0 && (queue.d = 0);\n};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".bundle.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_mupdf_simple-viewer_worker_mjs\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkfusion_reader\"] = self[\"webpackChunkfusion_reader\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(\"vendors-node_modules_localforage_dist_localforage_js\").then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":[],"sourceRoot":""}